{"version":3,"sources":["components/Button.js","components/Cover.js","components/Dice.js","components/Name.js","components/Score.js","components/Player.js","components/Main.js","components/Option.js","components/Game.js","index.js"],"names":["Button","name","click","onClick","Cover","startGameBtn","optionPage","className","Dice","randomNumStr","Name","Score","scoreType","Player","score","tempScore","isActive","Main","props","randomNumber","Math","floor","random","handleRollDice","dice1","dice2","setState","diceIsRoll","total","resetTemp","state","player1","isPlaying","player2","saveScore","handleSaveScore","console","log","diceName","isWin","this","backBtn","Component","Option","optionBtnClick","Game","isCoverPage","isOptionPage","isMainPage","handleStartGameBtn","handleOptionPage","handleOptionBtnClick","backToHomePageBtn","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aaf59677.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Button = ({name, click}) => {\r\n    return (\r\n        <button onClick={click}>{name}</button>\r\n    );\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport Button from './Button';\r\n\r\nconst Cover = ({startGameBtn,optionPage}) => {\r\n    return (\r\n        <div className=\"flex-col\">\r\n            <Button name=\"start game\" click={startGameBtn}/>\r\n            <Button name=\"option\" click={optionPage}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cover;\r\n","import React from 'react';\r\n\r\nconst Dice = ({randomNumStr}) => {\r\n    return (\r\n        <div className='dice-wrap'>\r\n            <i className={`fas fa-dice-${randomNumStr}`}></i>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default Dice;\r\n","import React from 'react';\r\n\r\nconst Name = ({name}) => {\r\n    return (\r\n        <div>{name}</div>\r\n    );\r\n}\r\n\r\nexport default Name;\r\n","import React from 'react';\r\n\r\nconst Score = ({scoreType}) => {\r\n    return (\r\n        <div>\r\n            {scoreType}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Score;\r\n","import React from 'react';\r\nimport Name from './Name'\r\nimport Score from './Score'\r\nconst Player = ({score,tempScore,name,isActive}) => {\r\n    return (\r\n        <div className={`player-container ${isActive && 'active'}`}>\r\n            <Name name={name}/>\r\n            <Score scoreType={score}/>\r\n            <Score scoreType={tempScore}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Player;\r\n","import React, { Component } from 'react';\r\nimport Dice from './Dice'\r\nimport Button from './Button'\r\nimport Player from './Player';\r\n\r\nexport default class Main extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            diceIsRoll: false,\r\n            diceName: ['one','two','three','four','five','six'],\r\n            player1: {\r\n                tempScore: 0,\r\n                score: 0,\r\n                isPlaying: false,\r\n                isWin: false,\r\n            },\r\n            player2: {\r\n                tempScore: 0,\r\n                score: 0,\r\n                isPlaying: false,\r\n                isWin: false,\r\n            }\r\n        }\r\n    }\r\n    randomNumber = () => Math.floor(Math.random() * 6) + 1;\r\n    handleRollDice = () => {\r\n        let dice1 = this.randomNumber()\r\n        let dice2 = this.randomNumber()\r\n        this.setState({\r\n            diceIsRoll: true,\r\n            dice1: dice1,\r\n            dice2: dice2,\r\n            total: dice1 + dice2\r\n        })\r\n        if (dice1 === dice2 && dice2 === 6){\r\n            // should remove temp score\r\n            // should pass player\r\n            this.resetTemp()\r\n        }\r\n        if (!this.state.player1.isPlaying && !this.state.player2.isPlaying){\r\n            // start point - player 1 should start\r\n            this.setState( state => ({\r\n                ...state,\r\n                player1 : {\r\n                    ...this.state.player1,\r\n                    isPlaying: !state.isPlaying\r\n                }\r\n            }))\r\n        }\r\n        this.saveScore()\r\n    }\r\n    saveScore = () => {\r\n        let {player1,player2} = this.state\r\n        if (player1.isPlaying){\r\n            this.setState(state => ({\r\n                player1: {\r\n                    ...state.player1,\r\n                    tempScore: state.player1.tempScore + state.total\r\n                },\r\n            }))\r\n        } \r\n        if (player2.isPlaying){\r\n            this.setState(state => ({\r\n                player2: {\r\n                    ...state.player2,\r\n                    tempScore: state.player2.tempScore + state.total\r\n                },\r\n            }))\r\n        } \r\n    }\r\n    resetTemp = () =>{\r\n        let {player1,player2} = this.state\r\n        if (player1.isPlaying){\r\n            this.setState(state => ({\r\n                player1: { \r\n                    isPlaying:  !state.player1.isPlaying,\r\n                    tempScore: 0,\r\n                },\r\n                player2: { isPlaying:  \r\n                    !state.player2.isPlaying\r\n                },\r\n            }))\r\n        } else if (player2.isPlaying){\r\n            this.setState(state => ({\r\n                player1: { isPlaying:  !state.player1.isPlaying},\r\n                player2: { isPlaying:  !state.player2.isPlaying},\r\n            }))\r\n        }\r\n    }\r\n    handleSaveScore = () => {\r\n        let  {player1,player2} = this.state\r\n        if (player1.isPlaying){\r\n            this.setState(state => ({\r\n                player1: {\r\n                    ...state.player1,\r\n                    score: state.player1.tempScore,\r\n                    tempScore: 0, \r\n                    isPlaying: !state.player1.isPlaying\r\n                },\r\n                player2: {\r\n                    ...state.player2,\r\n                    isPlaying: !state.player2.isPlaying\r\n                }\r\n            }))\r\n        }\r\n        if (player2.isPlaying){\r\n            this.setState(state => ({\r\n                player2: {\r\n                    ...state.player2,\r\n                    score: state.player2.tempScore,\r\n                    tempScore: 0, \r\n                    isPlaying: !state.player2.isPlaying\r\n                }\r\n            }))\r\n        }\r\n        console.log(this.state);\r\n    }\r\n    render(){\r\n        const {diceIsRoll,diceName,dice1,dice2,player1,player2} = this.state\r\n        return (\r\n            <div className=\"main-page\">\r\n                <div className='players-wrap'>\r\n                    <Player \r\n                        name='player 1'\r\n                        score={player1.score} \r\n                        tempScore={player1.tempScore} \r\n                        isActive={player1.isPlaying} \r\n                    />\r\n                    <Player \r\n                        name='player 2'\r\n                        score={player2.score} \r\n                        tempScore={player2.tempScore} \r\n                        isActive={player2.isPlaying} \r\n                    />\r\n                </div>\r\n                \r\n                { diceIsRoll &&  \r\n                <div className=\"dices-container\">\r\n                    <Dice randomNumStr={diceName[dice1-1]}/>\r\n                    <Dice randomNumStr={diceName[dice2-1]}/>\r\n                </div>\r\n                }\r\n                <Button name='roll' click={this.handleRollDice}/>\r\n                <Button name='hold' click={this.handleSaveScore}/>\r\n                <Button name='go back to homepage' click={this.props.backBtn}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Button from './Button';\r\n\r\nconst Option = ({optionBtnClick}) => {\r\n    return (\r\n        <div>\r\n            <h1>option page!</h1>\r\n            <Button name='go back' click={optionBtnClick}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Option;\r\n","import React,{ Component } from 'react';\nimport './game.css';\nimport Cover from './Cover'\nimport Main from './Main';\nimport Option from './Option'\nexport default class Game extends Component {\n  state = { \n    isCoverPage: true,\n    isOptionPage: false,\n    isMainPage: false\n  }\n  handleStartGameBtn = () => {\n    this.setState({\n      isCoverPage: false,\n      isMainPage: true\n    })\n  }\n  handleOptionPage = () => {\n    this.setState({\n      isCoverPage: false,\n      isOptionPage: true,\n    })\n  }\n  handleOptionBtnClick = () => {\n    this.setState({\n      isCoverPage: true,\n      isOptionPage: false,\n    }) \n  }\n  backToHomePageBtn = () => {\n    this.setState({\n      isCoverPage: true,\n      isOptionPage: false,\n      isMainPage: false\n    }) \n  }\n  render(){\n    const {isCoverPage,isOptionPage} = this.state\n    return (\n      <div className=\"game-wrap\">\n        {\n        isCoverPage && !isOptionPage\n        ? <Cover \n          startGameBtn={this.handleStartGameBtn}\n          optionPage={this.handleOptionPage}\n          />\n        : \n        isOptionPage && !isCoverPage \n        ? <Option optionBtnClick={this.handleOptionBtnClick}/> \n        :\n        <Main backBtn={this.backToHomePageBtn}/>\n        }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Game from './components/Game';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Game />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}