{"version":3,"sources":["components/Button.js","components/Cover.js","components/Dice.js","components/Name.js","components/Score.js","components/Player.js","components/Input.js","components/Main.js","components/Help.js","components/Game.js","index.js"],"names":["Button","name","click","cn","disabled","className","onClick","Cover","startGameBtn","optionPage","href","Dice","randomNumStr","rotate","Name","Score","scoreType","onChange","Player","score","tempScore","isActive","handleScoreChange","Input","handleChange","userRangeValue","err","min","max","defaultValue","type","value","Main","props","randomNumber","Math","floor","random","handleRollDice","state","scoreToWin","player1","player2","dice1","dice2","console","log","resetTemp","setState","diceIsRoll","total","scoreChange","isPlaying","saveTempScore","handleSaveScore","errMsg","handleUserChangeBtn","e","parseInt","target","isWin","handleNewGameClick","diceName","this","backBtn","Component","Help","optionBtnClick","Game","isCoverPage","isOptionPage","isMainPage","handleStartGameBtn","handleOptionPage","handleOptionBtnClick","backToHomePageBtn","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0fe2ae8f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Button = ({name, click,cn,disabled}) => {\r\n    return (\r\n        <button \r\n            className={`${cn} ${disabled ? 'disabled' : ''}`} \r\n            disabled={disabled}\r\n            onClick={click}>\r\n            \r\n        {name}</button>\r\n    );\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport Button from './Button';\r\n\r\nconst Cover = ({startGameBtn,optionPage}) => {\r\n    return (\r\n        <div className=\"flex-col cover\">\r\n            <div className=\"wellcome-msg\">\r\n                <h1 >\r\n                    <span>wellcome to</span> <a href=\"/\">Roll-it</a> Dice Game\r\n                </h1>\r\n            </div>\r\n            <Button name=\"start game\" click={startGameBtn} cn={'start-game-btn'}/>\r\n            <Button name=\"Help\" click={optionPage} cn={'help-btn'}/>\r\n            <footer>made with <span className=\"red\">&#10084;</span> by <a href=\"https://github.com/gurelbs\">Gurel ben Shabat</a></footer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cover;\r\n","import React from 'react';\r\nimport './game.css'\r\nconst Dice = ({randomNumStr,rotate}) => {\r\n    return (\r\n        <div className='dice-wrap'>\r\n            <i className={`fas fa-dice-${randomNumStr} ${rotate}`}></i>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default Dice;\r\n","import React from 'react';\r\nimport './player-container.css'\r\n\r\nconst Name = ({name,cn}) => {\r\n    return (\r\n        <div className={`player-name ${cn}`}>{name}</div>\r\n    );\r\n}\r\n\r\nexport default Name;\r\n","import React from 'react';\r\nimport './player-container.css'\r\n\r\nconst Score = ({scoreType, cn, onChange}) => {\r\n    return (\r\n        <div className={`player-score`}>\r\n            <p \r\n                onChange={onChange}\r\n                className={cn}>{scoreType || 0}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Score;\r\n","import React from 'react';\r\nimport Name from './Name'\r\nimport Score from './Score'\r\nimport './game.css'\r\nimport './player-container.css'\r\nconst Player = ({score,tempScore,name,isActive,handleScoreChange}) => {\r\n    return (\r\n        <div className={`player-container`}>\r\n            <Name name={name} cn={isActive && 'active'}/>\r\n            <div className=\"score-wrap\">\r\n                <div className={\"total-score\"}>\r\n                    <Score scoreType={score} onChange={handleScoreChange}/>\r\n                    <i className={`fab fa-bitcoin ${isActive && 'spin'}`}></i>\r\n                </div>\r\n            </div>\r\n            <div className={`temp-score-wrap ${isActive ? 'temp-score-anima' : ''}`}>\r\n                <div className=\"dollar-icon-wrap\">\r\n                    \r\n                <Score scoreType={tempScore} isActive={isActive} cn={'current-score'}/> \r\n                    <i className=\"fas fa-dollar-sign\"></i>            \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Player;\r\n","import React from 'react';\r\n\r\nconst Input = ({handleChange, userRangeValue, err,min,max,defaultValue}) => {\r\n    return (\r\n        <div className=\"input-wrap\">\r\n                <p \r\n                    className=\"input-txt\">{err || 'score to win: '} \r\n            <input \r\n                className=\"user-limit\"\r\n                name=\"user-limit\" \r\n                type=\"range\"   \r\n                min={min}\r\n                max={max}\r\n                value={userRangeValue}\r\n                onChange={handleChange}\r\n                />\r\n                    <span className=\"user-range-txt\">{userRangeValue}</span>\r\n                </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Input;","import React, { Component } from 'react';\r\nimport Dice from './Dice'\r\nimport Button from './Button'\r\nimport Player from './Player';\r\nimport Input from './Input';\r\n\r\nexport default class Main extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            diceIsRoll: false,\r\n            diceName: ['one','two','three','four','five','six'],\r\n            scoreToWin: 100,\r\n            player1: {\r\n                tempScore: 0,\r\n                score: 0,\r\n                isPlaying: false,\r\n                isWin: false,\r\n            },\r\n            player2: {\r\n                tempScore: 0,\r\n                score: 0,\r\n                isPlaying: false,\r\n                isWin: false,\r\n            },\r\n            disabled: false\r\n        }\r\n    }\r\n    randomNumber = () => Math.floor(Math.random() * 6) + 1;\r\n    handleRollDice = () => {\r\n        let {scoreToWin,player1,player2} = this.state \r\n        let dice1 = this.randomNumber()\r\n        let dice2 = this.randomNumber()\r\n        console.log(dice1,dice2,scoreToWin);\r\n        if (dice1 === 6 && dice2 === 6){\r\n            this.resetTemp()\r\n        } else {\r\n            this.setState({\r\n                diceIsRoll: true,\r\n                dice1: dice1,\r\n                dice2: dice2,\r\n                total: dice1 + dice2,\r\n            })\r\n        }\r\n        if (!player1.score < scoreToWin || !player2.score < scoreToWin) {\r\n            this.scoreChange()\r\n        }\r\n        if (!player1.isPlaying && !player2.isPlaying){\r\n            // start point - player 1 should start\r\n            this.setState( state => ({\r\n                ...state,\r\n                diceIsRoll: true,\r\n                player1 : {\r\n                    ...state.player1,\r\n                    isPlaying: !state.isPlaying,\r\n                    tempScore: state.player1.tempScore + state.total\r\n                }\r\n            }))\r\n        }\r\n        this.saveTempScore()\r\n    }\r\n    saveTempScore = () => {\r\n        let {player1,player2} = this.state\r\n        if (player1.isPlaying){\r\n            this.setState(state => ({\r\n                player1: {\r\n                    ...state.player1,\r\n                    tempScore: state.player1.tempScore + state.total\r\n                },\r\n            }))\r\n        } \r\n        if (player2.isPlaying){\r\n            this.setState(state => ({\r\n                player2: {\r\n                    ...state.player2,\r\n                    tempScore: state.player2.tempScore + state.total\r\n                },\r\n            }))\r\n        } \r\n    }\r\n    resetTemp = () =>{\r\n        let {player1,player2} = this.state\r\n        if (player1.isPlaying || player2.isPlaying){\r\n            this.setState(state => ({\r\n                ...state,\r\n                diceIsRoll: false,\r\n                dice1: 0,\r\n                dice2: 0,\r\n                total: 0,\r\n                player1: { \r\n                    ...state.player1,\r\n                    isPlaying:  !state.player1.isPlaying,\r\n                    tempScore: 0,\r\n                    \r\n                },\r\n                player2: { \r\n                    ...state.player2,\r\n                    isPlaying:  !state.player2.isPlaying,\r\n                    tempScore: 0,\r\n                },\r\n            }))\r\n\r\n        }\r\n    }\r\n    handleSaveScore = () => {\r\n        this.scoreChange()\r\n        let  {player1,player2} = this.state\r\n        if (player1.isPlaying){\r\n            this.setState(state => ({\r\n                player1: {\r\n                    ...state.player1,\r\n                    score: state.player1.score + state.player1.tempScore,\r\n                    tempScore: 0, \r\n                    isPlaying: !state.player1.isPlaying\r\n                },\r\n                player2: {\r\n                    ...state.player2,\r\n                    isPlaying: !state.player2.isPlaying\r\n                }\r\n            }))\r\n        } else if (player2.isPlaying){\r\n            this.setState(state => ({\r\n                player2: {\r\n                    ...state.player2,\r\n                    score: state.player2.score + state.player2.tempScore,\r\n                    tempScore: 0, \r\n                    isPlaying: !state.player2.isPlaying\r\n                },\r\n                player1: {\r\n                    ...state.player1,\r\n                    isPlaying: !state.player1.isPlaying\r\n                }\r\n            }))\r\n        }\r\n\r\n    }\r\n    rotate = () => {\r\n        const {player1} = this.state\r\n        return player1.isPlaying ? 'rotate-right' : 'rotate-left'\r\n    }\r\n    errMsg = () => {\r\n        return (\r\n            <dive className=\"loose-msg\">\r\n                <p>\r\n                {!this.state.player1.isPlaying ? 'PLAYER 1' : 'PLAYER 2'} LOOSE HIS TURN\r\n                </p> \r\n            </dive>\r\n        )\r\n    }\r\n    handleUserChangeBtn = (e) => {\r\n        this.setState(state => ({\r\n            ...state,\r\n            scoreToWin: parseInt(e.target.value)\r\n        }))\r\n    }\r\n    scoreChange = () => {\r\n        let {player1, player2, scoreToWin} = this.state;\r\n        if (player1.score >= scoreToWin){\r\n            this.setState(state => ({\r\n                ...state, \r\n                player1: {\r\n                    ...player1, \r\n                    isWin: true\r\n                },\r\n                disabled: true\r\n            }))\r\n        } \r\n        if (player2.score >= scoreToWin){\r\n            this.setState(state => ({\r\n                ...state, \r\n                player2: {\r\n                    ...player2, \r\n                    isWin: true\r\n                },\r\n                disabled: true\r\n            }))\r\n        }\r\n    }\r\n    handleNewGameClick = () => {\r\n        this.setState(state => ({\r\n            ...state,\r\n            diceIsRoll: false,\r\n            scoreToWin: 100,\r\n            player1: {\r\n                tempScore: 0,\r\n                score: 0,\r\n                isPlaying: false,\r\n                isWin: false,\r\n            },\r\n            player2: {\r\n                tempScore: 0,\r\n                score: 0,\r\n                isPlaying: false,\r\n                isWin: false,\r\n            },\r\n            disabled: false\r\n        }))\r\n    }\r\n    render(){\r\n        const {\r\n            diceIsRoll,diceName,dice1,dice2,\r\n            player1,player2,\r\n            scoreToWin,disabled,\r\n        } = this.state\r\n\r\n        return (\r\n            <div className=\"main-page\">\r\n                <div className='players-wrap'>\r\n                {\r\n                (!player2.isWin) ?\r\n                    <Player \r\n                        name='player 1'\r\n                        score={player1.score} \r\n                        tempScore={player1.tempScore} \r\n                        isActive={player1.isPlaying} \r\n                        handleScoreChange={this.handleSaveScore}\r\n                        />\r\n                        : <div className=\"winner-msg\">player 2 win!</div> \r\n                }\r\n                    {\r\n                        <div className=\"dices_and_control_btns\">\r\n                        {\r\n                            diceIsRoll ? <div className=\"dices-container \">\r\n                            <Dice randomNumStr={diceName[dice1-1]} rotate={this.rotate()}/>\r\n                            <Dice randomNumStr={diceName[dice2-1]} rotate={this.rotate()}/>\r\n                        </div> \r\n                        : player1.isPlaying || player2.isPlaying \r\n                        ?  this.errMsg() \r\n                        : ''\r\n                        \r\n                    }\r\n                        <div className=\"control-btns-wrap\">\r\n                            <Button \r\n                                name='roll' \r\n                                click={this.handleRollDice}\r\n                                disabled={disabled}\r\n                                />\r\n                            <Button \r\n                                name='hold' \r\n                                disabled={disabled}\r\n                                click={this.handleSaveScore}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    }\r\n                    {(!player1.isWin) ?\r\n                    <Player \r\n                        name='player 2'\r\n                        score={player2.score} \r\n                        tempScore={player2.tempScore} \r\n                        isActive={player2.isPlaying} \r\n                        handleScoreChange={this.handleSaveScore}\r\n                        /> \r\n                    : <div className=\"winner-msg\">player 1 Win!</div>}\r\n                </div> \r\n                \r\n                <div className=\"bottom-control-btn\">\r\n                    <Button name='new game' cn={'new-game'} click={this.handleNewGameClick}/>\r\n                    <Input\r\n                        min={2}\r\n                        max={1000}\r\n                        userRangeValue={scoreToWin}\r\n                        handleChange={this.handleUserChangeBtn}\r\n                    />\r\n                    <Button name='homepage' click={this.props.backBtn}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Button from './Button';\r\nimport './setting-page.css'\r\nconst Help = ({optionBtnClick}) => {\r\n    return (\r\n        <div className=\"help-page\">\r\n            <div className=\"help-wrap\">\r\n                <h1>hey!</h1>\r\n                <h4>wellcome to rollit game.</h4>\r\n                <p>it's a simple <a href=\"https://en.wikipedia.org/wiki/Pig_(dice_game)\" target=\"_blink\">dice game</a>.<br></br> \r\n                in our version you heve 2 dice and  6 is bad: a roll of 6 is treated as a roll of 1.</p>\r\n                <Button name='go back' click={optionBtnClick}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Help;\r\n","import React,{ Component } from 'react';\nimport './game.css';\nimport Cover from './Cover'\nimport Main from './Main';\nimport Help from './Help'\nexport default class Game extends Component {\n  state = { \n    isCoverPage: true,\n    isOptionPage: false,\n    isMainPage: false\n  }\n  handleStartGameBtn = () => {\n    this.setState({\n      isCoverPage: false,\n      isMainPage: true\n    })\n  }\n  handleOptionPage = () => {\n    this.setState({\n      isCoverPage: false,\n      isOptionPage: true,\n    })\n  }\n  handleOptionBtnClick = () => {\n    this.setState({\n      isCoverPage: true,\n      isOptionPage: false,\n    }) \n  }\n  backToHomePageBtn = () => {\n    this.setState({\n      isCoverPage: true,\n      isOptionPage: false,\n      isMainPage: false\n    }) \n  }\n  render(){\n    const {isCoverPage,isOptionPage} = this.state\n    return (\n      <div className=\"game-wrap\">\n        {\n        isCoverPage && !isOptionPage\n        ? <Cover \n          startGameBtn={this.handleStartGameBtn}\n          optionPage={this.handleOptionPage}\n          />\n        : \n        isOptionPage && !isCoverPage \n        ? <Help optionBtnClick={this.handleOptionBtnClick}/> \n        :\n        <Main backBtn={this.backToHomePageBtn}/>\n        }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Game from './components/Game';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Game />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}