{"version":3,"sources":["components/Button.js","components/Cover.js","components/Dice.js","components/Name.js","components/Score.js","components/Player.js","components/Input.js","components/Main.js","components/Help.js","components/Game.js","index.js"],"names":["Button","name","click","cn","className","onClick","Cover","startGameBtn","optionPage","href","Dice","randomNumStr","rotate","Name","Score","scoreType","Player","score","tempScore","isActive","Input","handleChange","userRangeValue","err","type","min","max","defaultValue","value","onChange","Main","props","randomNumber","Math","floor","random","handleRollDice","dice1","dice2","console","log","resetTemp","setState","diceIsRoll","total","state","player1","isPlaying","player2","saveTempScore","handleSaveScore","errMsg","handleUserChangeBtn","e","maxScore","target","handleErrMsg","num","parseInt","userInputActive","diceName","isWin","this","backBtn","handleClick","handleUserClick","Component","Help","optionBtnClick","Game","isCoverPage","isOptionPage","isMainPage","handleStartGameBtn","handleOptionPage","handleOptionBtnClick","backToHomePageBtn","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.490c2197.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Button = ({name, click,cn}) => {\r\n    return (\r\n        <button className={cn} onClick={click}>{name}</button>\r\n    );\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport Button from './Button';\r\n\r\nconst Cover = ({startGameBtn,optionPage}) => {\r\n    return (\r\n        <div className=\"flex-col cover\">\r\n            <div className=\"wellcome-msg\">\r\n                <h1 >\r\n                    <span>wellcome to</span> <a href=\"/\">Roll-it</a> Dice Game\r\n                </h1>\r\n            </div>\r\n            <Button name=\"start game\" click={startGameBtn} cn={'start-game-btn'}/>\r\n            <Button name=\"Help\" click={optionPage} cn={'help-btn'}/>\r\n            <footer>made with <span className=\"red\">&#10084;</span> by <a href=\"https://github.com/gurelbs\">Gurel ben Shabat</a></footer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cover;\r\n","import React from 'react';\r\nimport './game.css'\r\nconst Dice = ({randomNumStr,rotate}) => {\r\n    return (\r\n        <div className='dice-wrap'>\r\n            <i className={`fas fa-dice-${randomNumStr} ${rotate}`}></i>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default Dice;\r\n","import React from 'react';\r\nimport './player-container.css'\r\n\r\nconst Name = ({name,cn}) => {\r\n    return (\r\n        <div className={`player-name ${cn}`}>{name}</div>\r\n    );\r\n}\r\n\r\nexport default Name;\r\n","import React from 'react';\r\nimport './player-container.css'\r\n\r\nconst Score = ({scoreType, cn}) => {\r\n    return (\r\n        <div className={`player-score`}>\r\n            <p className={cn}>{scoreType}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Score;\r\n","import React from 'react';\r\nimport Name from './Name'\r\nimport Score from './Score'\r\nimport './game.css'\r\nimport './player-container.css'\r\nconst Player = ({score,tempScore,name,isActive}) => {\r\n    return (\r\n        <div className={`player-container`}>\r\n            <Name name={name} cn={isActive && 'active'}/>\r\n            <div className=\"score-wrap\">\r\n                <div className={\"total-score\"}>\r\n                    <Score scoreType={score} />\r\n                    <i className={`fab fa-bitcoin ${isActive && 'spin'}`}></i>\r\n                </div>\r\n            </div>\r\n            <div className={`temp-score-wrap ${isActive ? 'temp-score-anima' : ''}`}>\r\n                <div className=\"dollar-icon-wrap\">\r\n                    \r\n                <Score scoreType={tempScore} isActive={isActive} cn={'current-score'}/> \r\n                    <i className=\"fas fa-dollar-sign\"></i>            \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Player;\r\n","import React from 'react';\r\n\r\nconst Input = ({handleChange, userRangeValue, err}) => {\r\n    return (\r\n        <div className=\"input-wrap\">\r\n            <input \r\n                // className=\"user-limit\"\r\n                name=\"user-limit\" \r\n                type=\"range\"   \r\n                min={2}\r\n                max={1000}\r\n                defaultValue={100}\r\n                value={userRangeValue}\r\n                onChange={handleChange}\r\n                />\r\n            {/* <input \r\n                type=\"submit\" \r\n                value=\"change game limit\" \r\n                onClick={handleClick}\r\n                className={`user-input-btn ${!isActive && \"invisible\"}`}/> */}\r\n                <p \r\n                    className=\"input-txt\">{err || 'score to win: '} \r\n                    <span className=\"user-range-txt\">{userRangeValue}</span>\r\n                </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Input;","import React, { Component } from 'react';\r\nimport Dice from './Dice'\r\nimport Button from './Button'\r\nimport Player from './Player';\r\nimport Input from './Input';\r\n\r\nexport default class Main extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            diceIsRoll: false,\r\n            userInputActive: false,\r\n            diceName: ['one','two','three','four','five','six'],\r\n            maxScore: 100,\r\n            player1: {\r\n                tempScore: 0,\r\n                score: 0,\r\n                isPlaying: false,\r\n                isWin: false,\r\n            },\r\n            player2: {\r\n                tempScore: 0,\r\n                score: 0,\r\n                isPlaying: false,\r\n                isWin: false,\r\n            }\r\n        }\r\n    }\r\n    randomNumber = () => Math.floor(Math.random() * 6) + 1;\r\n    handleRollDice = () => {\r\n        let dice1 = this.randomNumber()\r\n        let dice2 = this.randomNumber()\r\n        console.log(dice1,dice2);\r\n        if (dice1 === 6 && dice2 === 6){\r\n            this.resetTemp()\r\n        } else {\r\n            this.setState({\r\n                diceIsRoll: true,\r\n                dice1: dice1,\r\n                dice2: dice2,\r\n                total: dice1 + dice2,\r\n            })\r\n        }\r\n        if (!this.state.player1.isPlaying && !this.state.player2.isPlaying){\r\n            // start point - player 1 should start\r\n            this.setState( state => ({\r\n                ...state,\r\n                diceIsRoll: true,\r\n                player1 : {\r\n                    ...state.player1,\r\n                    isPlaying: !state.isPlaying,\r\n                    tempScore: state.player1.tempScore + state.total\r\n                }\r\n            }))\r\n        }\r\n        this.saveTempScore()\r\n    }\r\n    saveTempScore = () => {\r\n        let {player1,player2} = this.state\r\n        if (player1.isPlaying){\r\n            this.setState(state => ({\r\n                player1: {\r\n                    ...state.player1,\r\n                    tempScore: state.player1.tempScore + state.total\r\n                },\r\n            }))\r\n        } \r\n        if (player2.isPlaying){\r\n            this.setState(state => ({\r\n                player2: {\r\n                    ...state.player2,\r\n                    tempScore: state.player2.tempScore + state.total\r\n                },\r\n            }))\r\n        } \r\n        \r\n    }\r\n    resetTemp = () =>{\r\n        let {player1,player2} = this.state\r\n        if (player1.isPlaying || player2.isPlaying){\r\n            this.setState(state => ({\r\n                ...state,\r\n                diceIsRoll: false,\r\n                dice1: 0,\r\n                dice2: 0,\r\n                total: 0,\r\n                player1: { \r\n                    ...state.player1,\r\n                    isPlaying:  !state.player1.isPlaying,\r\n                    tempScore: 0,\r\n                    \r\n                },\r\n                player2: { \r\n                    ...state.player2,\r\n                    isPlaying:  !state.player2.isPlaying,\r\n                    tempScore: 0,\r\n                },\r\n            }))\r\n\r\n        }\r\n    }\r\n    handleSaveScore = () => {\r\n        let  {player1,player2} = this.state\r\n        if (player1.isPlaying){\r\n            this.setState(state => ({\r\n                player1: {\r\n                    ...state.player1,\r\n                    score: state.player1.score + state.player1.tempScore,\r\n                    tempScore: 0, \r\n                    isPlaying: !state.player1.isPlaying\r\n                },\r\n                player2: {\r\n                    ...state.player2,\r\n                    isPlaying: !state.player2.isPlaying\r\n                }\r\n            }))\r\n        }\r\n        if (player2.isPlaying){\r\n            this.setState(state => ({\r\n                player2: {\r\n                    ...state.player2,\r\n                    score: state.player2.score + state.player2.tempScore,\r\n                    tempScore: 0, \r\n                    isPlaying: !state.player2.isPlaying\r\n                },\r\n                player1: {\r\n                    ...state.player1,\r\n                    isPlaying: !state.player1.isPlaying\r\n                }\r\n            }))\r\n        }\r\n        console.log(this.state);\r\n    }\r\n    rotate = () => {\r\n        const {player1} = this.state\r\n        return player1.isPlaying ? 'rotate-right' : 'rotate-left'\r\n    }\r\n    errMsg = () => {\r\n        return (\r\n            <dive className=\"loose-msg\">\r\n                <p>\r\n                {!this.state.player1.isPlaying ? 'PLAYER 1' : 'PLAYER 2'} LOOSE HIS TURN\r\n                </p> \r\n            </dive>\r\n        )\r\n    }\r\n    handleUserChangeBtn = (e) => {\r\n        this.setState(state => ({\r\n            ...state,\r\n            maxScore: e.target.value,\r\n        }))\r\n        console.log(this.state.maxScore);\r\n    }\r\n    handleErrMsg = () => {\r\n        let {maxScore} = this.state\r\n        let num = parseInt(maxScore)\r\n        console.log(num);\r\n        if (maxScore < 2){\r\n            return('game limit score must be at least 2')\r\n        }\r\n        if (maxScore > 10000){\r\n            return('maximum game score')\r\n        }\r\n    }\r\n    render(){\r\n\r\n        const {\r\n            diceIsRoll,diceName,dice1,dice2,\r\n            player1,player2,\r\n            maxScore,userInputActive\r\n        } = this.state\r\n\r\n        return (\r\n            <div className=\"main-page\">\r\n                <div className='players-wrap'>\r\n                    <Player \r\n                        name='player 1'\r\n                        score={player1.score} \r\n                        tempScore={player1.tempScore} \r\n                        isActive={player1.isPlaying} \r\n                    />\r\n                    {\r\n                    <div className=\"dices_and_control_btns\">\r\n                        {\r\n                        diceIsRoll ? <div className=\"dices-container \">\r\n                            <Dice randomNumStr={diceName[dice1-1]} rotate={this.rotate()}/>\r\n                            <Dice randomNumStr={diceName[dice2-1]} rotate={this.rotate()}/>\r\n                        </div> \r\n                        : player1.isPlaying || player2.isPlaying \r\n                        ?  this.errMsg() \r\n                        : ''\r\n                        \r\n                        }\r\n                        <div className=\"control-btns-wrap\">\r\n                            <Button name='roll' click={this.handleRollDice}/>\r\n                            <Button name='hold' click={this.handleSaveScore}/>\r\n                        </div>\r\n                    </div>\r\n                    }\r\n                    <Player \r\n                        name='player 2'\r\n                        score={player2.score} \r\n                        tempScore={player2.tempScore} \r\n                        isActive={player2.isPlaying} \r\n                    />\r\n                </div>\r\n                <div className=\"bottom-control-btn\">\r\n                    <Button name='new game' cn={'new-game'} click={this.props.backBtn}/>\r\n                    <Input\r\n                        userRangeValue={maxScore}\r\n                        handleChange={this.handleUserChangeBtn}\r\n                        handleClick={this.handleUserClick}\r\n                        isActive={userInputActive}\r\n                        err={this.handleErrMsg()}\r\n                    />\r\n                    <Button name='homepage' click={this.props.backBtn}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Button from './Button';\r\nimport './setting-page.css'\r\nconst Help = ({optionBtnClick}) => {\r\n    return (\r\n        <div className=\"help-page\">\r\n            <div className=\"help-wrap\">\r\n                <h1>hey!</h1>\r\n                <h4>wellcome to rollit game.</h4>\r\n                <p>it's a simple <a href=\"https://en.wikipedia.org/wiki/Pig_(dice_game)\" target=\"_blink\">dice game</a>.<br></br> \r\n                in our version you heve 2 dice and  6 is bad: a roll of 6 is treated as a roll of 1.</p>\r\n                <Button name='go back' click={optionBtnClick}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Help;\r\n","import React,{ Component } from 'react';\nimport './game.css';\nimport Cover from './Cover'\nimport Main from './Main';\nimport Help from './Help'\nexport default class Game extends Component {\n  state = { \n    isCoverPage: true,\n    isOptionPage: false,\n    isMainPage: false\n  }\n  handleStartGameBtn = () => {\n    this.setState({\n      isCoverPage: false,\n      isMainPage: true\n    })\n  }\n  handleOptionPage = () => {\n    this.setState({\n      isCoverPage: false,\n      isOptionPage: true,\n    })\n  }\n  handleOptionBtnClick = () => {\n    this.setState({\n      isCoverPage: true,\n      isOptionPage: false,\n    }) \n  }\n  backToHomePageBtn = () => {\n    this.setState({\n      isCoverPage: true,\n      isOptionPage: false,\n      isMainPage: false\n    }) \n  }\n  render(){\n    const {isCoverPage,isOptionPage} = this.state\n    return (\n      <div className=\"game-wrap\">\n        {\n        isCoverPage && !isOptionPage\n        ? <Cover \n          startGameBtn={this.handleStartGameBtn}\n          optionPage={this.handleOptionPage}\n          />\n        : \n        isOptionPage && !isCoverPage \n        ? <Help optionBtnClick={this.handleOptionBtnClick}/> \n        :\n        <Main backBtn={this.backToHomePageBtn}/>\n        }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Game from './components/Game';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Game />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}