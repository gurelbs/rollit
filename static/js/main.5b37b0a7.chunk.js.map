{"version":3,"sources":["components/Button.js","components/Cover.js","components/Dice.js","components/Name.js","components/Score.js","components/Player.js","components/Main.js","components/Option.js","components/Game.js","index.js"],"names":["Button","name","click","onClick","Cover","startGameBtn","optionPage","className","Dice","randomNumStr","rotate","Name","Score","scoreType","Player","score","tempScore","isActive","spin","Main","props","randomNumber","Math","floor","random","handleRollDice","dice1","dice2","console","log","resetTemp","setState","diceIsRoll","total","state","player1","isPlaying","player2","saveTempScore","handleSaveScore","errMsg","diceName","isWin","this","backBtn","Component","Option","optionBtnClick","Game","isCoverPage","isOptionPage","isMainPage","handleStartGameBtn","handleOptionPage","handleOptionBtnClick","backToHomePageBtn","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b37b0a7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Button = ({name, click}) => {\r\n    return (\r\n        <button onClick={click}>{name}</button>\r\n    );\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport Button from './Button';\r\n\r\nconst Cover = ({startGameBtn,optionPage}) => {\r\n    return (\r\n        <div className=\"flex-col\">\r\n            <Button name=\"start game\" click={startGameBtn}/>\r\n            <Button name=\"option\" click={optionPage}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cover;\r\n","import React from 'react';\r\nimport './game.css'\r\nconst Dice = ({randomNumStr,rotate}) => {\r\n    return (\r\n        <div className='dice-wrap'>\r\n            <i className={`fas fa-dice-${randomNumStr} ${rotate}`}></i>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default Dice;\r\n","import React from 'react';\r\nimport './player-container.css'\r\n\r\nconst Name = ({name}) => {\r\n    return (\r\n        <div className=\"player-name\">{name}</div>\r\n    );\r\n}\r\n\r\nexport default Name;\r\n","import React from 'react';\r\nimport './player-container.css'\r\n\r\nconst Score = ({scoreType}) => {\r\n    return (\r\n        <div className=\"player-score\">\r\n            <p>{scoreType}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Score;\r\n","import React from 'react';\r\nimport Name from './Name'\r\nimport Score from './Score'\r\nimport './game.css'\r\nimport './player-container.css'\r\nconst Player = ({score,tempScore,name,isActive,spin}) => {\r\n    return (\r\n        <div className={`player-container ${isActive && 'active'}`}>\r\n            <Name name={name}/>\r\n            <div className=\"score-wrap\">\r\n                <Score scoreType={score}/>\r\n                <i className={`fab fa-bitcoin ${isActive && 'spin'}`}></i>\r\n            </div>\r\n            <div className=\"temp-score-wrap\">\r\n                <Score scoreType={tempScore}/>\r\n                <i className=\"fas fa-dollar-sign\"></i>            \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Player;\r\n","import React, { Component } from 'react';\r\nimport Dice from './Dice'\r\nimport Button from './Button'\r\nimport Player from './Player';\r\n\r\nexport default class Main extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            diceIsRoll: false,\r\n            diceName: ['one','two','three','four','five','six'],\r\n            player1: {\r\n                tempScore: 0,\r\n                score: 0,\r\n                isPlaying: false,\r\n                isWin: false,\r\n            },\r\n            player2: {\r\n                tempScore: 0,\r\n                score: 0,\r\n                isPlaying: false,\r\n                isWin: false,\r\n            }\r\n        }\r\n    }\r\n    randomNumber = () => Math.floor(Math.random() * 6) + 1;\r\n    handleRollDice = () => {\r\n        let dice1 = this.randomNumber()\r\n        let dice2 = this.randomNumber()\r\n        console.log(dice1,dice2);\r\n        if (dice1 === 6 && dice2 === 6){\r\n            this.resetTemp()\r\n        } else {\r\n            this.setState({\r\n                diceIsRoll: true,\r\n                dice1: dice1,\r\n                dice2: dice2,\r\n                total: dice1 + dice2\r\n            })\r\n        }\r\n        if (!this.state.player1.isPlaying && !this.state.player2.isPlaying){\r\n            // start point - player 1 should start\r\n            this.setState( state => ({\r\n                ...state,\r\n                diceIsRoll: true,\r\n                player1 : {\r\n                    ...state.player1,\r\n                    isPlaying: !state.isPlaying,\r\n                    tempScore: state.player1.tempScore + state.total\r\n                }\r\n            }))\r\n        }\r\n        this.saveTempScore()\r\n    }\r\n    saveTempScore = () => {\r\n        \r\n        let {player1,player2} = this.state\r\n        if (player1.isPlaying){\r\n            this.setState(state => ({\r\n                player1: {\r\n                    ...state.player1,\r\n                    tempScore: state.player1.tempScore + state.total\r\n                },\r\n            }))\r\n        } \r\n        if (player2.isPlaying){\r\n            this.setState(state => ({\r\n                player2: {\r\n                    ...state.player2,\r\n                    tempScore: state.player2.tempScore + state.total\r\n                },\r\n            }))\r\n        } \r\n        \r\n    }\r\n    resetTemp = () =>{\r\n        let {player1,player2} = this.state\r\n        if (player1.isPlaying || player2.isPlaying){\r\n            this.setState(state => ({\r\n                ...state,\r\n                diceIsRoll: false,\r\n                dice1: 0,\r\n                dice2: 0,\r\n                total: 0,\r\n                player1: { \r\n                    ...state.player1,\r\n                    isPlaying:  !state.player1.isPlaying,\r\n                    tempScore: 0,\r\n                    \r\n                },\r\n                player2: { \r\n                    ...state.player2,\r\n                    isPlaying:  !state.player2.isPlaying,\r\n                    tempScore: 0,\r\n                },\r\n            }))\r\n\r\n        }\r\n    }\r\n    handleSaveScore = () => {\r\n        let  {player1,player2} = this.state\r\n        if (player1.isPlaying){\r\n            this.setState(state => ({\r\n                player1: {\r\n                    ...state.player1,\r\n                    score: state.player1.score + state.player1.tempScore,\r\n                    tempScore: 0, \r\n                    isPlaying: !state.player1.isPlaying\r\n                },\r\n                player2: {\r\n                    ...state.player2,\r\n                    isPlaying: !state.player2.isPlaying\r\n                }\r\n            }))\r\n        }\r\n        if (player2.isPlaying){\r\n            this.setState(state => ({\r\n                player2: {\r\n                    ...state.player2,\r\n                    score: state.player2.score + state.player2.tempScore,\r\n                    tempScore: 0, \r\n                    isPlaying: !state.player2.isPlaying\r\n                },\r\n                player1: {\r\n                    ...state.player1,\r\n                    isPlaying: !state.player1.isPlaying\r\n                }\r\n            }))\r\n        }\r\n        console.log(this.state);\r\n    }\r\n    rotate = () => {\r\n        const {player1} = this.state\r\n        return player1.isPlaying ? 'rotate-right' : 'rotate-left'\r\n    }\r\n    errMsg = () => {\r\n        return (\r\n            <dive className=\"loose-msg\">\r\n                <p>\r\n                {!this.state.player1.isPlaying ? 'PLAYER 1' : 'PLAYER 2'} LOOSE HIS TURN\r\n                </p> \r\n            </dive>\r\n        )\r\n    }\r\n    render(){\r\n        const {diceIsRoll,diceName,dice1,dice2,player1,player2} = this.state\r\n        return (\r\n            <div className=\"main-page\">\r\n                <div className='players-wrap'>\r\n                    <Player \r\n                        name='player 1'\r\n                        score={player1.score} \r\n                        tempScore={player1.tempScore} \r\n                        isActive={player1.isPlaying} \r\n                    />\r\n                    {\r\n                    <div className=\"dices_and_control_btns\">\r\n                        {\r\n                        diceIsRoll ? <div className=\"dices-container \">\r\n                            <Dice randomNumStr={diceName[dice1-1]} rotate={this.rotate()}/>\r\n                            <Dice randomNumStr={diceName[dice2-1]} rotate={this.rotate()}/>\r\n                        </div> \r\n                        : player1.isPlaying || player2.isPlaying \r\n                        ?  this.errMsg() \r\n                        : ''\r\n                        \r\n                        }\r\n                        <div className=\"control-btns-wrap\">\r\n                            <Button name='roll' click={this.handleRollDice}/>\r\n                            <Button name='hold' click={this.handleSaveScore}/>\r\n                        </div>\r\n                    </div>\r\n                    }\r\n                    <Player \r\n                        name='player 2'\r\n                        score={player2.score} \r\n                        tempScore={player2.tempScore} \r\n                        isActive={player2.isPlaying} \r\n                    />\r\n                </div>\r\n                <div className=\"back-hp-btn\">\r\n                    <Button name='go back to homepage' click={this.props.backBtn}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Button from './Button';\r\n\r\nconst Option = ({optionBtnClick}) => {\r\n    return (\r\n        <div>\r\n            <h1>option page!</h1>\r\n            <Button name='go back' click={optionBtnClick}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Option;\r\n","import React,{ Component } from 'react';\nimport './game.css';\nimport Cover from './Cover'\nimport Main from './Main';\nimport Option from './Option'\nexport default class Game extends Component {\n  state = { \n    isCoverPage: true,\n    isOptionPage: false,\n    isMainPage: false\n  }\n  handleStartGameBtn = () => {\n    this.setState({\n      isCoverPage: false,\n      isMainPage: true\n    })\n  }\n  handleOptionPage = () => {\n    this.setState({\n      isCoverPage: false,\n      isOptionPage: true,\n    })\n  }\n  handleOptionBtnClick = () => {\n    this.setState({\n      isCoverPage: true,\n      isOptionPage: false,\n    }) \n  }\n  backToHomePageBtn = () => {\n    this.setState({\n      isCoverPage: true,\n      isOptionPage: false,\n      isMainPage: false\n    }) \n  }\n  render(){\n    const {isCoverPage,isOptionPage} = this.state\n    return (\n      <div className=\"game-wrap\">\n        {\n        isCoverPage && !isOptionPage\n        ? <Cover \n          startGameBtn={this.handleStartGameBtn}\n          optionPage={this.handleOptionPage}\n          />\n        : \n        isOptionPage && !isCoverPage \n        ? <Option optionBtnClick={this.handleOptionBtnClick}/> \n        :\n        <Main backBtn={this.backToHomePageBtn}/>\n        }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Game from './components/Game';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Game />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}